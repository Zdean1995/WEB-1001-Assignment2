@model IEnumerable<WEB_1001_Assignment2.Models.ToDo>

@{
    ViewData["Title"] = "To Do";
}
<!--
    I had such a grand vision for this page.  It turns out that asp-net is harder than I remember.  I removed the top of the table and set it so
    the table says if the to do is not completed and if it is it says when it was completed.
-->
<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Add</a>
</p>
<table class="table">
    <tbody>
@foreach (var item in Model) {
            if (item.Completed)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TodoText)
                    </td>
                    <td>
                        Completed @Html.DisplayFor(modelItem => item.CompletetionDate)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
            else
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TodoText)
                    </td>
                    <td>
                        <div class="col-md-4">
                           Not Completed
                        </div>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
